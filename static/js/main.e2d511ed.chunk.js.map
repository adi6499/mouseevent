{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","mouseX","mouseMoveX","mouseY","mouseMoveY","document","body","style","background","className","onTouchMove","e","targetTouches","clientX","clientY","Math","floor","onMouseMove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4LAoCeA,MA7Bf,WACE,MAAwBC,mBAAS,GAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,GAAjC,mBAAKG,EAAL,KAAYC,EAAZ,KAeA,OADAC,SAASC,KAAKC,MAAMC,WAApB,cAAsCP,EAAO,GAA7C,YAAmDE,EAAnD,YAA6DF,EAA7D,KAEE,mCACA,qBAAKQ,UAAU,UAAUC,YAhBd,SAACC,GACZ,MAAwBA,EAAEC,cAAc,GAAnCC,EAAL,EAAKA,QAAQC,EAAb,EAAaA,QACbZ,EAAWa,KAAKC,MAAMH,IACtBT,EAAWW,KAAKC,MAAMF,KAayBG,YAXnC,SAACN,GAEbT,EAAWa,KAAKC,MAAML,EAAEE,UACxBT,EAAWW,KAAKC,MAAML,EAAEG,WAQxB,SACE,sBAAKL,UAAU,OAAf,UAAuBR,EAAvB,IAAgCE,EAAhC,IAAyCF,UCfhCiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BZ,K","file":"static/js/main.e2d511ed.chunk.js","sourcesContent":["import React,{useState} from 'react'\n\nimport \"./App.css\"\n\n\n\n\nfunction App(){\n  let [mouseX,mouseMoveX]=useState(0)\n  let [mouseY,mouseMoveY]=useState(0)\n  let mousing =(e)=>{\n    let {clientX,clientY} = e.targetTouches[0]\n    mouseMoveX(Math.floor(clientX))\n    mouseMoveY(Math.floor(clientY))\n  }\n  let mousingC =(e)=>{\n   \n    mouseMoveX(Math.floor(e.clientX))\n    mouseMoveY(Math.floor(e.clientY))\n  }\n  \n\n \n  document.body.style.background=`rgb(${mouseX+20} ${mouseY} ${mouseX})`\n  return(\n    <>\n    <div className=\"contain\" onTouchMove={mousing} onMouseMove={mousingC} >\n      <div className=\"head\">{mouseX} {mouseY} {mouseX}</div>\n    </div>\n    </>\n  )\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}